{
  "openapi": "3.0.0",
  "info": {
    "description": "Быкова Есения Евгеньевна М80-203Б-21 Курсач ИСРППС Документация свагер",
    "version": "1.0.0",
    "title": "Курсач!",
    "contact": {
      "email": "email"
    }
  },
  "servers": [
    {
      "url": "http://127.0.0.1:5000/"
    }
  ],
  "tags": [
    {
      "name": "Cars CRUD API",
      "description": "Простая CRUD REST API с использованием SWAGGER-UI"
    }
  ],
  "paths": {
    "/cars": {
      "get": {
        "tags": [
          "Get All Cars "
        ],
        "summary": "Returns list of cars in DB",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/CarRequests"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Post Car"
        ],
        "summary": "Create a new car and adding to DB",
        "requestBody": {
          "description": "Car Request Post Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/carRequestPostBody"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/car/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the cat that we want to match",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Get car by id"
        ],
        "summary": "Get car request with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "car Request id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/car"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. car request not found."
          }
        }
      },
      "put": {
        "summary": "edit a car request by ID",
        "tags": [
          "car Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "car Request id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "requestBody": {
          "description": "car Request Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/carRequest"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/carRequest"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "delete": {
        "summary": "Delete car Request by ID",
        "tags": [
          "Car Request"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "car Id",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK",
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          },
          "400": {
            "description": "Failed. Misunderstood Request."
          },
          "404": {
            "description": "Failed. car Request not found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CarRequests": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "manufacturer": {
            "type": "string",
            "format": "string"
          },
          "model": {
            "type": "string",
            "format": "string"
          },
          "car_type": {
            "type": "string",
            "format": "string"
          },
          "price": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    }
  }
}
